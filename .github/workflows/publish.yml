jobs:
  build-and-push:
    name: Build the image and push it to DockerHub
    needs:
      - freebsd-arm
    outputs:
      outcome: ${{ steps.move.outputs.outcome }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - id: armv6
        name: Restore armv6 files from cache
        uses: actions/cache/restore@v3
        with:
          key: FreeBSD-${{ inputs.freebsd-version }}-armv6-RPI-B
          path: ./fbsd/${{ inputs.freebsd-version }}/armv6
      - id: armv7
        name: Restore armv7 files from cache
        uses: actions/cache/restore@v3
        with:
          key: FreeBSD-${{ inputs.freebsd-version }}-armv7-GENERICSD
          path: ./fbsd/${{ inputs.freebsd-version }}/armv7
      - if: ${{ steps.armv6.outputs.cache-hit == 'true' && steps.armv6.outputs.cache-hit == 'true' }}
        name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2
      - if: ${{ steps.armv6.outputs.cache-hit == 'true' && steps.armv6.outputs.cache-hit == 'true' }}
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
      - id: current-time
        if: ${{ steps.armv6.outputs.cache-hit == 'true' && steps.armv7.outputs.cache-hit == 'true' }}
        name: Format the current time
        run: |
          printf 'value=%s\n' $(date "+%Y%m%d%H%M%S") | tee -a $GITHUB_OUTPUT
      - id: restore-cache
        if: ${{ steps.armv6.outputs.cache-hit == 'true' && steps.armv6.outputs.cache-hit == 'true' }}
        name: Attempt to restore buildx cache
        uses: actions/cache/restore@v3
        with:
          key: buildx-${{ hashFiles('.github/workflows/*.yml', 'fbsd/**', 'local/**', 'Dockerfile') }}
          path: /tmp/.buildx-cache
          restore-keys: |
            buildx-
      - if: ${{ steps.armv6.outputs.cache-hit == 'true' && steps.armv7.outputs.cache-hit == 'true' && steps.restore-cache.outputs.cache-hit == 'true' }}
        name: Run Buildx with cache and Push it to DockerHub
        uses: docker/build-push-action@v3
        with:
          cache-from: /tmp/.buildx-cache
          cache-to: /tmp/.buildx-cache-new
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/cross-debian:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/cross-debian:${{ steps.current-time.outputs.value }}
      - if: ${{ steps.armv6.outputs.cache-hit == 'true' && steps.armv7.outputs.cache-hit == 'true' && steps.restore-cache.outputs.cache-hit != 'true' }}
        name: Run Buildx without cache and Push it to DockerHub
        uses: docker/build-push-action@v3
        with:
          cache-to: /tmp/.buildx-cache-new
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/cross-debian:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/cross-debian:${{ steps.current-time.outputs.value }}
      - id: move
        if: ${{ steps.armv6.outputs.cache-hit == 'true' && steps.armv7.outputs.cache-hit == 'true' && steps.restore-cache.outputs.cache-hit == 'true' && success() }}
        name: Move buildx cache to save
        run: |
          mv /tmp/.buildx-cache{-new,}
          echo outcome=success | tee -a $GITHUB_OUTPUT
        shell: bash
  example:
    if: ${{ needs.build-and-push.outputs.outcome == 'success' }}
    name: Build examples
    needs:
      - build-and-push
    uses: ./.github/workflows/example.yml
  freebsd-arm:
    name: Prepare for FreeBSD ARM
    uses: ./.github/workflows/freebsd-arm.yml
    with:
      version: ${{ inputs.freebsd-version }}
  patch:
    if: ${{ needs.build-and-push.outputs.outcome == 'success' }}
    name: Patch the description to DockerHub
    needs:
      - build-and-push
    secrets:
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
    uses: ./.github/workflows/patch.yml
name: Publish
on:
  workflow_call:
    inputs:
      freebsd-version:
        description: >
          The version of FreeBSD.
        required: true
        type: string
    secrets:
      DOCKERHUB_PASSWORD:
        required: true
      DOCKERHUB_USERNAME:
        required: true
  workflow_dispatch:
    inputs:
      freebsd-version:
        default: '13.1'
        description: >
          The version of FreeBSD.
        options:
          - '13.1'
        required: true
        type: choice
