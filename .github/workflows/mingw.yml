env:
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/cross-debian:example-mingw
jobs:
  docker:
    if: github.ref_type == 'branch'
    name: Docker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          path: /tmp/.buildx-cache
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Run Buildx
        uses: docker/build-push-action@v2
        with:
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
          context: .
          file: example/mingw/Dockerfile
          push: true
          tags: ${{ env.IMAGE_NAME }}
      - name: Move cache
        run: |
          rm -fr /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
      - name: Build for MinGW
        run: |
          docker run --pull=missing --rm ${{ env.IMAGE_NAME }} ./autobuild.sh | tar -xf -
      - name: Archive
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.event.repository.name }}-${{ github.ref }}-${{ github.sha }}
          path: |
            foo-i686.exe
            foo-x86_64.exe
name: MinGW
on:
  push:
